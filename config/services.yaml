# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\NotificationService:
        arguments:
            $failover: '%env(bool:NOTIFICATION_FAILOVER)%'
            $maxAttempts: '%env(int:NOTIFICATION_MAX_ATTEMPTS)%'
            $throttlingEnabled: '%env(bool:NOTIFICATION_THROTTLING_ENABLED)%'
            $throttlingLimit: '%env(int:NOTIFICATION_THROTTLING_LIMIT)%'
            $throttlingPeriod: '%env(int:NOTIFICATION_THROTTLING_PERIOD)%'
            $trackingEnabled: '%env(bool:NOTIFICATION_TRACKING_ENABLED)%'
    # SMS Providers
    App\Service\Provider\AwsSnsProvider:
        arguments:
            $apiKey: '%env(AWS_SNS_API_KEY)%'
            $apiSecret: '%env(AWS_SNS_API_SECRET)%'
        tags: ['sms_provider']

    App\Service\Provider\TwilioProvider:
        arguments:
            $accountSid: '%env(TWILIO_ACCOUNT_SID)%'
            $authToken: '%env(TWILIO_AUTH_TOKEN)%'
        tags: ['sms_provider']

    # Email Providers
    App\Service\Provider\AwsSesProvider:
        arguments:
            $apiKey: '%env(AWS_SES_API_KEY)%'
            $apiSecret: '%env(AWS_SES_API_SECRET)%'
        tags: ['email_provider']

    App\Service\Provider\SmtpProvider:
        arguments:
            $mailer: '@mailer'
            $host: '%env(SMTP_HOST)%'
            $port: '%env(int:SMTP_PORT)%'
            $username: '%env(SMTP_USERNAME)%'
            $password: '%env(SMTP_PASSWORD)%'
            $encryption: '%env(SMTP_ENCRYPTION)%'
        tags: ['email_provider']

    # Push Notification Providers
    App\Service\Provider\PushyProvider:
        arguments:
            $apiKey: '%env(PUSHY_API_KEY)%'
        tags: ['push_notification_provider']
